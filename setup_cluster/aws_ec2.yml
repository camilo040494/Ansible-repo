---
- name: Start Master node
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Create ec2 instaces
      ec2:
        aws_access_key: "{{aws_access_key}}"
        aws_secret_key: "{{aws_secret_key}}"
        key_name: "{{key_name}}"
        region: "{{aws_region}}"
        group_id: "{{group_id}}"
        instance_type: "{{instance_type}}"
        image: "{{ami_id}}"
        #assign_public_ip: yes
        wait: yes
        vpc_subnet_id: "{{ vpc_id }}"
        volumes:
        - device_name: "{{volumes.device_name}}"
          volume_type: "{{volumes.volume_type}}"
          volume_size: "{{volumes.volume_size}}"
        private_ip: "{{ master_ip }}"
      register: ec2_master

    - name: Add new instance to host group
      add_host:
        name: master_node
        hostname: "ec2-user@{{ ec2_master.instances.0.dns_name if ec2_master.instances.0.dns_name|length>0 else ec2_master.instances.0.public_ip }}"
        ansible_ssh_private_key_file: "{{ key_directory }}"
        ansible_host: "ec2-user@{{ ec2_master.instances.0.dns_name if ec2_master.instances.0.dns_name|length>0 else ec2_master.instances.0.public_ip }}"
        groupname: master

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ ec2_master.instances.0.dns_name if ec2_master.instances.0.dns_name|length>0 else ec2_master.instances.0.public_ip }}"
        port: 22
        delay: 60
        timeout: 320
        state: started

- name: Start Slaves nodes
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Create ec2 instaces
      ec2:
        aws_access_key: "{{aws_access_key}}"
        aws_secret_key: "{{aws_secret_key}}"
        key_name: "{{key_name}}"
        region: "{{aws_region}}"
        group_id: "{{group_id}}"
        instance_type: "{{instance_type}}"
        image: "{{ami_id}}"
        #assign_public_ip: yes
        wait: yes
        vpc_subnet_id: "{{ vpc_id }}"
        volumes:
        - device_name: "{{volumes.device_name}}"
          volume_type: "{{volumes.volume_type}}"
          volume_size: "{{volumes.volume_size}}"
        private_ip: "{{ item }}"
      with_sequence: start="{{ initial_ip }}" end="{{ latest_ip }}" stride=1 format="{{ group_ip }}%d"
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "ec2-user@{{ item.instances.0.dns_name if item.instances.0.dns_name|length>0 else item.instances.0.public_ip }}"
        ansible_ssh_private_key_file: "{{ key_directory }}"
        groupname: slaves
      with_items: "{{ ec2.results }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.instances.0.dns_name if item.instances.0.dns_name|length>0 else item.instances.0.public_ip }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.results }}"

- name: Configure master's hostname
  hosts: master
  become: True
  become_user: root
  tasks:
    - hostname:
        name: master

- name: Configure slave's hostname
  hosts: slaves
  become: True
  become_user: root
  gather_facts: True
  tasks:
    - hostname:
        name: "slave{{ play_hosts.index(inventory_hostname)|int+1 }}"
    #- debug: msg="{{ play_hosts.index(inventory_hostname) }}"
    #- debug: msg="{{ inventory_hostname }}"

- name: Configure master(s)
  hosts: master
  become_user: root
  become: True
  gather_facts: True
  roles:
    - server
    - ssh
    - hadoop

- name: Configure slave(s)
  hosts: slaves
  become_user: root
  become: True
  gather_facts: True
  roles:
    - ssh
    - hadoop
  tags: ec2_create
